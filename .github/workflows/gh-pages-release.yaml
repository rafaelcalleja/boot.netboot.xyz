name: Generate downloads repository

on:
  push:
    branches:
      - master
  repository_dispatch:
    types:
      - hf_model_update
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.client_payload.repository == 'auto-space/netbootLLM'
    permissions:
      id-token: write
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          mkdir -p buildout
          CWD=$(pwd)
          cd /tmp
          git clone https://github.com/netbootxyz/netboot.xyz
          cp -R ${CWD}/rootfs/* netboot.xyz
          wget https://huggingface.co/auto-space/netbootLLM/raw/main/endpoints.yml
          cat endpoints.yml >> netboot.xyz/endpoints.yml
          cd netboot.xyz
          docker build -t localbuild .
          docker run --rm -i -v ${CWD}/buildout:/buildout localbuild
      - name: Determine branch name
        run: |
          BRANCH="${GITHUB_BASE_REF#refs/heads/}"
          
          if [ -z "$BRANCH" ]; then
            BRANCH=${GITHUB_REF##*/}            
          fi
          
          if [ -z "$BRANCH" ]; then
            BRANCH=${{ github.ref_name }}
          fi
          
          if [ "$BRANCH" == "main" ] || [ -z "$BRANCH" ]; then
            BRANCH=master            
          fi
          
          echo "Building for $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
      - name: Deploy created packages to gh-pages
        run: |
          git checkout gh-pages 
          rm -rf resources/${{ env.BRANCH }}/ || true
          mkdir -p "resources/${{ env.BRANCH }}/" -p
          mv buildout/buildout/* "resources/${{ env.BRANCH }}"
          ./scripts/make-index-html.sh ./resources/
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git add -A
          (git commit -m "bump packages" && git push) || true
